{"version":3,"sources":["components/Songs/SongForm.js","Redux/apis/songs.js","history.js","Redux/actions/index.js","Redux/actions/types.js","components/Songs/CreateNewSong.js","components/Songs/SongsList.js","components/Songs/SongEdit.js","components/Modal.js","components/Songs/SongDelete.js","components/Songs/SongDetailes.js","Routes.js","components/App.js","Redux/reducers/index.js","Redux/reducers/songsReducers.js","Redux/Store.js","index.js"],"names":["SongForm","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","renderInputs","_ref","input","label","meta","className","concat","error","touched","react_default","a","createElement","assign","autoComplete","renderError","onSubmit","formValues","state","_ref2","Fragment","handleSubmit","Field","name","component","Component","reduxForm","form","validate","errors","title","artist","axios","create","baseURL","createBrowserHistory","fetchSong","id","_ref3","asyncToGenerator","regenerator_default","mark","_callee3","dispatch","response","wrap","_context3","prev","next","songs","get","sent","type","payload","data","stop","_x3","apply","arguments","CreateNewSong","createSong","components_Songs_SongForm","connect","_callee","_context","post","history","push","_x","SongsList","renderListOfSongs","map","song","key","renderButtons","react_router_dom","to","fetchSongs","values","_callee2","_context2","_x2","SongEdit","editSong","match","params","initialValues","_","pick","ownProps","_ref4","_callee4","_context4","patch","console","log","_x4","ModalBootstrap","_useState","useState","_useState2","slicedToArray","show","setShow","Modal","onHide","Header","closeButton","Title","Body","content","Footer","action","SongDelete","_this2","Button","variant","onClick","deleteSong","components_Modal","renderContent","renderActions","_ref5","_callee5","_context5","delete","_x5","SongDetails","_this$props$song","Routes","react_router","path","exact","CreateSong","from","App","combineReducers","formReducer","length","undefined","objectSpread","mapKeys","defineProperty","omit","enhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunk","store","createStore","reducers","ReactDOM","render","es","src_components_App","document","querySelector"],"mappings":"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","file":"static/js/main.b6588e5f.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './SongForm.scss';\r\nimport { Field, reduxForm } from 'redux-form';\r\n// import { Link } from \"react-router-dom\";\r\n\r\nclass SongForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {  }\r\n    }\r\n\r\n    renderError({error, touched}) {\r\n        if(touched && error) {\r\n            return (\r\n                <div className=\"ui error message\">\r\n                    <span className=\"header\">{error}</span>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    renderInputs = ({input , label , meta}) => {\r\n        const className = `field ${meta.error && meta.touched ? 'error' : \"\"}`\r\n        return (\r\n            <div className={className}>\r\n                <label>{label}</label>\r\n                <input autoComplete=\"off\" {...input} />\r\n                {this.renderError(meta)}\r\n            </div>\r\n        ) \r\n    }\r\n\r\n    onSubmit = (formValues) => {\r\n        this.props.onSubmit(formValues);\r\n    }\r\n\r\n    render() { \r\n        return ( \r\n            <React.Fragment>\r\n                <div>\r\n                    <form className=\"ui container form error\" onSubmit={this.props.handleSubmit(this.onSubmit)}>\r\n                        <Field name=\"title\" component={this.renderInputs} label=\"Enter song name \"/>\r\n                        <Field name=\"artist\" component={this.renderInputs} label=\"Enter singer name \"/>\r\n                        <button className=\"ui button primary margin-btn\">Submit</button>\r\n                    </form>\r\n                    {/* <div className=\"ui divider\"></div>\r\n                    <Link to=\"/\" className=\"ui button primary\">Songs</Link> */}\r\n                </div>\r\n            </React.Fragment>\r\n         );\r\n    }\r\n}\r\n\r\n// ========= Validations function ===========\r\nconst validate = (formValues) => {\r\n    const errors = {};\r\n\r\n    if(!formValues.title) {\r\n        errors.title = \"You must enter a title.\"\r\n    }\r\n    if(!formValues.artist) {\r\n        errors.artist = \"You must enter an artist name.\"\r\n    }\r\n    return errors;\r\n}\r\n\r\nexport default reduxForm({\r\n    form: 'songForm',\r\n    validate,\r\n})(SongForm)\r\n","import axios from 'axios';\r\n\r\nexport default axios.create({\r\n    baseURL: 'http://localhost:3001'\r\n});","import { createBrowserHistory } from 'history'; \r\nexport default createBrowserHistory();","import songs from '../apis/songs';\r\nimport {\r\n    CREATE_SONG,\r\n    FETCH_SONG,\r\n    FETCH_SONGS,\r\n    DELETE_SONG,\r\n    EDIT_SONG\r\n} from './types';\r\nimport history from '../../history';\r\n\r\nexport const createSong = (formValues) => {\r\n    return async (dispatch) => {\r\n        const response = await songs.post('/songs', formValues);\r\n        dispatch({\r\n            type: CREATE_SONG,\r\n            payload: response.data\r\n        })\r\n        // Navigate the user after success request \r\n        history.push('/')\r\n    }\r\n}\r\n\r\nexport const fetchSongs = () => {\r\n    return async (dispatch) => {\r\n        const response = await songs.get('/songs');\r\n        dispatch({\r\n            type: FETCH_SONGS,\r\n            payload: response.data\r\n        })\r\n    }\r\n}\r\n\r\nexport const fetchSong = (id) => async (dispatch) => {\r\n    const response = await songs.get(`/songs/${id}`);\r\n    dispatch({\r\n        type: FETCH_SONG,\r\n        payload: response.data\r\n    })\r\n}\r\n\r\nexport const editSong = (id, formValues) => async (dispatch) => {\r\n    // put => is update all properties of a record\r\n    // patch => is update some properties of a record\r\n    const response = await songs.patch(`/songs/${id}`, formValues);\r\n    dispatch({\r\n        type: EDIT_SONG,\r\n        payload: response.data\r\n    })\r\n    console.log(history);\r\n\r\n    history.push('/');\r\n}\r\n\r\nexport const deleteSong = (id) => async (dispatch) => {\r\n    await songs.delete(`/songs/${id}`);\r\n    dispatch({\r\n        type: DELETE_SONG,\r\n        payload: id\r\n    })\r\n    history.push('/');\r\n}","export const CREATE_SONG = 'CREATE_SONG';\r\nexport const FETCH_SONGS = 'FETCH_SONGS';\r\nexport const FETCH_SONG = 'FETCH_SONG';\r\nexport const DELETE_SONG = 'DELETE_SONG';\r\nexport const EDIT_SONG = 'EDIT_SONG';","import React, { Component } from 'react';\r\nimport SongForm from './SongForm';\r\nimport { connect } from 'react-redux';\r\nimport { createSong } from '../../Redux/actions';\r\n\r\nclass CreateNewSong extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {}\r\n    }\r\n\r\n\r\n    onSubmit = (formValues) => {\r\n        this.props.createSong(formValues);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <h3>Create new song</h3>\r\n                <SongForm onSubmit={this.onSubmit} />\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(null, { createSong })(CreateNewSong);","import React, { Component } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport{ connect } from 'react-redux';\r\nimport { fetchSongs } from '../../Redux/actions';\r\n\r\nclass SongsList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {  }\r\n    }\r\n\r\n    componentDidMount() {    \r\n        this.props.fetchSongs();\r\n    }\r\n\r\n    renderListOfSongs = () => {\r\n        return this.props.songs.map( song => {\r\n            return (\r\n                <div className=\"item\" key={song.id}>\r\n                    {this.renderButtons(song)}\r\n                    <i className=\"large middle aligned icon soundcloud\" />\r\n                    <div className=\"content\"> \r\n                        <Link to={`/songs/${song.id}`} className=\"header\">\r\n                            {song.title}\r\n                        </Link>\r\n                        <div className=\"description\">\r\n                            {song.artist}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n\r\n    renderButtons = (song) => {\r\n        return (\r\n            <div className=\"right floated content\">\r\n                <Link \r\n                to={`/songs/edit/${song.id}`} \r\n                className=\"ui button primary\">\r\n                Edit</Link>\r\n                <Link \r\n                to={`/songs/delete/${song.id}`} \r\n                className=\"ui button negative\">\r\n                    Delete</Link>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render() { \r\n        // console.log(this.props.songs)\r\n        return ( \r\n            <React.Fragment>\r\n                <div className=\"ui celled list\">\r\n                    {this.renderListOfSongs()}\r\n                </div>\r\n                <div className=\"divider\"></div>\r\n                <Link to=\"/CreateSong\" className=\"ui button primary\">Create new song</Link>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return { songs: Object.values(state.songs) };\r\n};\r\n \r\nexport default connect(\r\n    mapStateToProps,\r\n    { fetchSongs }\r\n    )(SongsList);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchSong, editSong } from '../../Redux/actions';\r\nimport SongForm from './SongForm';\r\nimport _ from 'lodash';\r\n\r\nclass SongEdit extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {  }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.fetchSong(this.props.match.params.id);\r\n    }\r\n\r\n    onSubmit = (formValues) => {\r\n        this.props.editSong(this.props.match.params.id, formValues);\r\n    }\r\n\r\n    render() { \r\n        if(!this.props.song) {\r\n            return <div>Loading...</div>\r\n        }\r\n        return ( \r\n            <React.Fragment>\r\n                <h3>Edit a song</h3>\r\n                <SongForm \r\n                    // This is a known attr from redux-form that fill the initial values of the fields\r\n                    // ._pick is for just pick the fields value that we want and don't include id, user and so on ....\r\n                    initialValues={_.pick(this.props.song, 'title', 'artist')}\r\n                    onSubmit={this.onSubmit} />\r\n            </React.Fragment>\r\n         );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return { song: state.songs[ownProps.match.params.id] };\r\n}\r\n\r\nexport default connect(mapStateToProps, { fetchSong, editSong })(SongEdit);","import React, {useState} from \"react\";\r\nimport { Modal } from 'react-bootstrap';\r\n\r\nconst ModalBootstrap = (props) => {\r\n    const [show, setShow] = useState(true);\r\n\r\n  const handleClose = () => setShow(false);\r\n//   const handleShow = () => setShow(true);\r\n\r\n  return (\r\n    <>\r\n      {/* <Button variant=\"danger\" onClick={handleShow}>\r\n        Launch demo modal\r\n      </Button> */}\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{props.title}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>{props.content}</Modal.Body>\r\n        <Modal.Footer>\r\n          {props.action}\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ModalBootstrap;","import React, { Component } from 'react';\r\nimport Modal from '../Modal';\r\nimport { connect } from 'react-redux';\r\nimport {fetchSong, deleteSong} from '../../Redux/actions';\r\nimport { Button } from 'react-bootstrap';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass SongDelete extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {  }\r\n    }\r\n\r\n    componentDidMount() {\r\n       this.props.fetchSong(this.props.match.params.id);\r\n    }\r\n\r\n    renderContent() {\r\n        if(!this.props.song) {\r\n            return 'Are you sure you want to delete this song?'\r\n        }\r\n        return `Are you sure you want to delete this song with titlt ${this.props.song.title}?`\r\n    }\r\n\r\n    renderActions() {\r\n        const id = this.props.match.params.id;\r\n        return (\r\n            <React.Fragment>\r\n                <Button variant=\"danger\" \r\n                onClick={ () => {this.props.deleteSong(id)}}>\r\n                    Delete\r\n                </Button>\r\n                <Link to=\"/\" variant=\"secondary\">Cancel</Link>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    render() { \r\n        return ( \r\n            <div >\r\n                <Modal \r\n                    content={this.renderContent()}\r\n                    action={this.renderActions()}/>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return { song: state.songs[ownProps.match.params.id] };\r\n}\r\n \r\nexport default connect(\r\n    mapStateToProps,\r\n    { fetchSong, deleteSong })(SongDelete);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchSong } from '../../Redux/actions';\r\n\r\nclass SongDetails extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {  }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.fetchSong(this.props.match.params.id);\r\n    }\r\n\r\n    \r\n    render() { \r\n        if(!this.props.song) {\r\n            return <div>Loading...</div>\r\n        }\r\n        const {title, artist} = this.props.song;\r\n        return ( \r\n            <React.Fragment>\r\n                <h1>{title}</h1>\r\n                <h5>{artist}</h5>\r\n            </React.Fragment>\r\n         );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return { song: state.songs[ownProps.match.params.id] }\r\n}\r\n \r\nexport default connect(mapStateToProps, { fetchSong })(SongDetails);","import React from \"react\";\r\n\r\nimport { Router, Route, Switch, Redirect } from \"react-router-dom\";\r\nimport CreateSong from './components/Songs/CreateNewSong';\r\nimport SongsList from './components/Songs/SongsList';\r\nimport SongEdit from './components/Songs/SongEdit';\r\nimport SongDelete from \"./components/Songs/SongDelete\";\r\nimport SongDetails from \"./components/Songs/SongDetailes\";\r\nimport history from './history';\r\n\r\nconst Routes = (\r\n  // BrowserHistory doesn't accept custom history so replaced with router\r\n  <Router history={history}>\r\n    <Switch>\r\n      <Route path=\"/\" exact component={SongsList} />\r\n      <Route path=\"/CreateSong\" component={CreateSong} />\r\n      <Route path=\"/songs/edit/:id\" component={SongEdit} />\r\n      <Route path=\"/songs/delete/:id\" component={SongDelete} />\r\n      <Route path=\"/songs/:id\" component={SongDetails} />\r\n      <Redirect from='*' to='/' />\r\n    </Switch>\r\n  </Router>\r\n);\r\n\r\nexport default Routes;","import './App.scss';\r\nimport React from 'react';\r\nimport Routes from '../Routes';\r\nimport { Router } from \"react-router-dom\";\r\nimport history from '../history';\r\n\r\nconst App = () => {\r\n    return (\r\n        <Router history={history}>\r\n            <div className=\"space-t-p ui container\">\r\n                {Routes}\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default App;","import { combineReducers } from 'redux'\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport songsReducer from './songsReducers';\r\n\r\nexport default combineReducers({\r\n    form: formReducer,\r\n    songs: songsReducer\r\n})","import _ from 'lodash';\r\nimport {\r\n    CREATE_SONG,\r\n    FETCH_SONG,\r\n    FETCH_SONGS,\r\n    DELETE_SONG,\r\n    EDIT_SONG\r\n} from '../actions/types';\r\n\r\n/*  collect object keys and make object for everyone\r\n    colors = [{hue: green}, {hue: blue}]\r\n    _.mapkeys(colors, 'hue') ==> \r\n        {\r\n            \"green\": {\r\n                \"hue\": green\r\n            },\r\n            \"blue\": {\r\n                \"hue\": blue\r\n            }\r\n        }\r\n*/\r\n\r\nexport default (state = {}, action) => {\r\n    switch (action.type) {\r\n        case FETCH_SONGS:\r\n            return { ...state, ..._.mapKeys(action.payload, 'id') };\r\n        case FETCH_SONG:\r\n            return { ...state, [action.payload.id]: action.payload };\r\n        case CREATE_SONG:\r\n            return { ...state, [action.payload.id]: action.payload };\r\n        case EDIT_SONG:\r\n            return { ...state, [action.payload.id]: action.payload };\r\n        case DELETE_SONG:\r\n            // to remove element using in delete requests \r\n            return _.omit(state, action.payload);\r\n        default:\r\n            return state;\r\n    }\r\n}","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport reducers from './reducers';\r\n\r\n// ======== Compose redux dev tool with applyMiddleware ========\r\nconst composeEnhancers =\r\n  typeof window === 'object' &&\r\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?   \r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\r\n    }) : compose;\r\n\r\nconst enhancer = composeEnhancers(\r\n  applyMiddleware(thunk),\r\n  // other store enhancers if any\r\n);\r\nconst store = createStore(reducers, enhancer);\r\n    \r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './components/App';\r\nimport { Provider } from 'react-redux';\r\nimport store from './Redux/Store';\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n     document.querySelector('#root')\r\n)"],"sourceRoot":""}